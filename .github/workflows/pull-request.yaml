name: Pull Request

on:
  pull_request:
    branches: ['*']

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Verify Changed files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        id: changed-files
        with:
          files: |
            .nvmrc
            src/
            package.json
            pnpm-lock.yaml
            eslint.config.js
            firebase.json
            tsconfig
            vite.config.ts
            vitest.config.ts

  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ needs.check-changes.outputs.should_run == 'true' }}
    needs: check-changes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Build
        run: pnpm build
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    if: ${{ needs.check-changes.outputs.should_run == 'true' }}
    needs: check-changes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Check pnpm version
        run: pnpm --version
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run ESLint
        run: pnpm lint
  test:
    name: Test with Vitest
    runs-on: ubuntu-latest
    if: ${{ needs.check-changes.outputs.should_run == 'true' }}
    needs: check-changes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Check pnpm version
        run: pnpm --version
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Vitest
        run: pnpm test
  code-scan:
    name: Code Scan
    runs-on: ubuntu-latest
    if: ${{ needs.check-changes.outputs.should_run == 'true' }}
    needs: check-changes
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          output: trivy.txt
          severity: 'CRITICAL'

      - name: Format Trivy Scan Result
        run: |
          if [ -s trivy.txt ]; then
            echo -e "## Vulnerability Scan Results\n<details><summary>Details</summary>\n\n\`\`\`\n$(cat trivy.txt)\n\`\`\`\n</details>" > formatted-trivy-result.md
          else
            echo -e "## Vulnerability Scan Results\nNo vulnerabilities were detected." > formatted-trivy-result.md
          fi

      - name: Comment PR with Trivy scan results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: formatted-trivy-result.md
          GITHUB_TOKEN: ${{ secrets.SCRUM_POKER_TOKEN }}

      - name: Clean up Trivy result file
        run: rm -f trivy.txt formatted-trivy-result.md
